<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="plc.interpreter.RegexTests" tests="99" skipped="0" failures="0" errors="0" timestamp="2020-09-21T17:24:14" hostname="Isabellas-MacBook-Pro-2.local" time="0.259">
  <properties/>
  <testcase name="testFileNamesRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.042"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.003"/>
  <testcase name="testFileNamesRegex(String, String, boolean)[12]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[12]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[13]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[14]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[15]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[16]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[17]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[18]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testNumberRegex(String, String, boolean)[19]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[20]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testNumberRegex(String, String, boolean)[21]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEvenStringsRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIntegerListRegex(String, String, boolean)[12]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[12]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testEmailRegex(String, String, boolean)[13]" classname="plc.interpreter.RegexTests" time="0.005"/>
  <testcase name="testEmailRegex(String, String, boolean)[14]" classname="plc.interpreter.RegexTests" time="0.003"/>
  <testcase name="testEmailRegex(String, String, boolean)[15]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testEmailRegex(String, String, boolean)[16]" classname="plc.interpreter.RegexTests" time="0.002"/>
  <testcase name="testEmailRegex(String, String, boolean)[17]" classname="plc.interpreter.RegexTests" time="0.003"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testIdentifierRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[1]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[2]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[3]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[4]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[5]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[6]" classname="plc.interpreter.RegexTests" time="0.002"/>
  <testcase name="testStringRegex(String, String, boolean)[7]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[8]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[9]" classname="plc.interpreter.RegexTests" time="0.004"/>
  <testcase name="testStringRegex(String, String, boolean)[10]" classname="plc.interpreter.RegexTests" time="0.002"/>
  <testcase name="testStringRegex(String, String, boolean)[11]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[12]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[13]" classname="plc.interpreter.RegexTests" time="0.001"/>
  <testcase name="testStringRegex(String, String, boolean)[14]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[15]" classname="plc.interpreter.RegexTests" time="0.0"/>
  <testcase name="testStringRegex(String, String, boolean)[16]" classname="plc.interpreter.RegexTests" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
